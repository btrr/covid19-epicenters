import datetime
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import matplotlib.ticker as ticker
from matplotlib.dates import MO, TU, WE, TH, FR, SA, SU

dates = ['2/14/2020', '2/15/2020', '2/16/2020', '2/17/2020', '2/18/2020', '2/19/2020', '2/20/2020', '2/21/2020', '2/22/2020', '2/23/2020', '2/24/2020', '2/25/2020', '2/26/2020', '2/27/2020', '2/28/2020', '2/29/2020', '3/1/2020', '3/2/2020', '3/3/2020', '3/4/2020', '3/5/2020', '3/6/2020', '3/7/2020', '3/8/2020', '3/9/2020', '3/10/2020', '3/11/2020', '3/12/2020', '3/13/2020', '3/14/2020', '3/15/2020', '3/16/2020', '3/17/2020', '3/18/2020', '3/19/2020', '3/20/2020', '3/21/2020', '3/22/2020', '3/23/2020', '3/24/2020', '3/25/2020', '3/26/2020', '3/27/2020', '3/28/2020', '3/29/2020', '3/30/2020', '3/31/2020', '4/1/2020', '4/2/2020', '4/3/2020', '4/4/2020', '4/5/2020', '4/6/2020', '4/7/2020', '4/8/2020', '4/9/2020', '4/10/2020', '4/11/2020', '4/12/2020', '4/13/2020', '4/14/2020', '4/15/2020', '4/16/2020', '4/17/2020', '4/18/2020', '4/19/2020', '4/20/2020', '4/21/2020', '4/22/2020', '4/23/2020', '4/24/2020', '4/25/2020', '4/26/2020', '4/27/2020', '4/28/2020', '4/29/2020', '4/30/2020', '5/1/2020', '5/2/2020', '5/3/2020', '5/4/2020', '5/5/2020', '5/6/2020', '5/7/2020', '5/8/2020', '5/9/2020', '5/10/2020', '5/11/2020', '5/12/2020', '5/13/2020', '5/14/2020', '5/15/2020', '5/16/2020', '5/17/2020', '5/18/2020', '5/19/2020', '5/20/2020', '5/21/2020', '5/22/2020', '5/23/2020', '5/24/2020', '5/25/2020', '5/26/2020', '5/27/2020', '5/28/2020', '5/29/2020', '5/30/2020', '5/31/2020', '6/1/2020', '6/2/2020', '6/3/2020', '6/4/2020', '6/5/2020', '6/6/2020', '6/7/2020', '6/8/2020', '6/9/2020', '6/10/2020', '6/11/2020', '6/12/2020', '6/13/2020', '6/14/2020', '6/15/2020', '6/16/2020', '6/17/2020', '6/18/2020', '6/19/2020', '6/20/2020', '6/21/2020', '6/22/2020', '6/23/2020', '6/24/2020', '6/25/2020', '6/26/2020', '6/27/2020', '6/28/2020', '6/29/2020', '6/30/2020', '7/01/2020', '7/02/2020']

# format dates
x_values = [datetime.datetime.strptime(d, "%m/%d/%Y").date() for d in dates]
ax = plt.gca()
formatter = mdates.DateFormatter("%m/%d")
ax.xaxis.set_major_formatter(formatter)

# create x-axis
ax.xaxis.set_major_locator(mdates.WeekdayLocator(byweekday=(MO, TU, WE, TH, FR, SA, SU), interval=7))
# minor tick = daily
ax.xaxis.set_minor_locator(mdates.WeekdayLocator(byweekday=(MO, TU, WE, TH, FR, SA, SU)))

# format y-axis
ax.get_yaxis().set_major_formatter(ticker.FuncFormatter(lambda x, pos: format(int(x), ',')))

# recovery rate
recoveries = [0, 25, 25, 25, 25, 25, 35.71, 35.71, 35.71, 35.71, 35.71, 42.86, 40, 40, 31.58, 29.17, 21.43, 15.79, 10.59, 8.11, 5.14, 5.95, 4.25, 3.02, 2.33, 1.6, 1.24, .94, .74, 1.73, 1.71, 1.72, 1.89, 1.33, .91, .84, .72, .55, .69, .72, .61, 2.27, 2.44, 2.67, 3.25, 3.43, 3.9, 4.17, 4.31, 4.49, 4.82, 5.39, 5.39, 5.51, 5.38, 5.64, 5.53, 5.8, 5.9, 6.39, 6.43, 7.69, 8.68, 8.69, 9.42, 9.45, 9.33, 10.35, 10.12, 9.96, 12.29, 12.66, 12.36, 14.14, 14.12, 14.27, 14.66, 14.75, 15.43, 15.48, 16.03, 16.78, 17.47, 17.41, 17.54, 18.31, 19.41, 19.59, 21.82, 22.47, 22.59, 22.77, 23.28, 23.45, 23.79, 23.79, 24.03, 24.41, 25.37, 27.72, 27.67, 28.15, 28.78, 29.07, 29.18, 29.98, 30.47, 33.73, 34.29, 35.6, 37.54, 38.39, 39.32, 39.53, 39.66, 39.93, 40.47, 41.05, 41.06, 41.85, 41.91, 42.25, 42.84, 42.99, 43.26, 43.28, 43.82, 43.94, 43.72, 44.21, 44.33, 44.47, 44.24, 44.1, 43.83, 43.6, 43.91, 44.18, 44.11, 44.19]

# mortality rate
deaths = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.17, 4.76, 10.53, 10.59, 9.91, 6.29, 5.56, 5.38, 4.23, 4.03, 3.31, 3.07, 2.57, 2.27, 1.98, 1.77, 1.74, 1.71, 1.52, 1.46, 1.32, 1.26, 1.26, 1.21, 1.29, 1.4, 1.41, 1.58, 1.68, 1.73, 1.86, 2.05, 2.23, 2.41, 2.56, 2.72, 2.86, 2.96, 3.22, 3.43, 3.58, 3.76, 3.89, 3.96, 4.05, 4.27, 4.45, 4.56, 4.66, 4.71, 4.77, 4.83, 5, 5.08, 5.12, 5.13, 5.13, 5.11, 5.12, 5.21, 5.33, 5.38, 5.38, 5.38, 5.36, 5.34, 5.44, 5.47, 5.59, 5.6, 5.61, 5.59, 5.58, 5.61, 5.65, 5.68, 5.68, 5.67, 5.65, 5.62, 5.64, 5.66, 5.65, 5.65, 5.63, 5.6, 5.57, 5.55, 5.57, 5.57, 5.56, 5.54, 5.51, 5.49, 5.48, 5.48, 5.46, 5.44, 5.41, 5.38, 5.36, 5.38, 5.37, 5.36, 5.33, 5.3, 5.26, 5.23, 5.21, 5.18, 5.15, 5.11, 5.06, 5.01, 4.96, 4.93, 4.88, 4.82, 4.76, 4.69, 4.63, 4.58, 4.52, 4.46, 4.39]

# create the graph
plt.plot(x_values, recoveries, color='#12cfdf', linewidth=2)
plt.plot(x_values, deaths, color='#C70039', linewidth=2)

# text labels
plt.title('Covid-19 in the United States: Recovery Rate vs Mortality Rate')
plt.xlabel('Date')
plt.ylabel('Percent')
plt.legend(['Recovery Rate', 'Mortality Rate'], loc='upper left')

plt.show()